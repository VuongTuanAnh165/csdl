import pandas as pd
import joblib

# Load m√¥ h√¨nh v√† danh s√°ch ƒë·∫∑c tr∆∞ng
model = joblib.load("slow_query_model.pkl")
model_features = joblib.load("model_features.pkl")

# Nh·∫≠p ƒë·∫∑c tr∆∞ng truy v·∫•n
new_query = {
    'rows_examined': 15000,    # S·ªë h√†ng ƒë∆∞·ª£c ki·ªÉm tra (cao = ch·∫≠m)
    'uses_index': 0,           # S·ª≠ d·ª•ng index (0: kh√¥ng, 1: c√≥)
    'has_like': 1,             # C√≥ s·ª≠ d·ª•ng to√°n t·ª≠ LIKE (0: kh√¥ng, 1: c√≥)
    'has_group': 1,            # C√≥ s·ª≠ d·ª•ng GROUP BY (0: kh√¥ng, 1: c√≥)
    'has_join': 1,             # C√≥ s·ª≠ d·ª•ng JOIN (0: kh√¥ng, 1: c√≥)
    'ALL': 1,                  # Ph∆∞∆°ng ph√°p ALL - qu√©t to√†n b·ªô b·∫£ng (0: kh√¥ng, 1: c√≥)
    'index': 0,                # Ph∆∞∆°ng ph√°p index - qu√©t index (0: kh√¥ng, 1: c√≥)
    'ref': 0,                  # Ph∆∞∆°ng ph√°p ref - truy c·∫≠p qua index (0: kh√¥ng, 1: c√≥)
    'const': 0,                # Ph∆∞∆°ng ph√°p const - truy c·∫≠p h·∫±ng s·ªë (0: kh√¥ng, 1: c√≥)
    'eq_ref': 1                # Ph∆∞∆°ng ph√°p eq_ref - truy c·∫≠p unique index (0: kh√¥ng, 1: c√≥)
}

# T·ª± th√™m c√°c ƒë·∫∑c tr∆∞ng b·ªã thi·∫øu
for col in model_features:
    if col not in new_query:
        new_query[col] = 0

# S·∫Øp x·∫øp ƒë√∫ng th·ª© t·ª±
new_data = pd.DataFrame([new_query])[model_features]

# D·ª± ƒëo√°n
result = model.predict(new_data)[0]
print("üì¢ Truy v·∫•n n√†y:", "CH·∫¨M ‚ùå" if result else "NHANH ‚úÖ")
