# predict_demo.py
import pandas as pd
import joblib

# 1. Load m√¥ h√¨nh v√† danh s√°ch c·ªôt
model = joblib.load("slow_query_model.pkl")
model_features = joblib.load("model_features.pkl")

# 2. Nh·∫≠p ƒë·∫∑c tr∆∞ng truy v·∫•n c·∫ßn d·ª± ƒëo√°n
# ‚ö†Ô∏è CH·ªà S·ª¨A GI√Å TR·ªä B√äN D∆Ø·ªöI (ph·∫£i ƒë·ªß c·ªôt gi·ªëng l√∫c train)
new_query = {
    'rows_examined': 25000,   # S·ªë l∆∞·ª£ng d√≤ng ƒë∆∞·ª£c qu√©t (c√†ng l·ªõn c√†ng c√≥ kh·∫£ nƒÉng truy v·∫•n ch·∫≠m)
    'uses_index': 0,          # C√≥ s·ª≠ d·ª•ng index kh√¥ng? (1: C√≥, 0: Kh√¥ng)
    'ALL': 1,                 # S·ª≠ d·ª•ng ki·ªÉu truy xu·∫•t ALL (full table scan)? (1: C√≥, 0: Kh√¥ng)
    'ref': 0,                 # S·ª≠ d·ª•ng ki·ªÉu truy xu·∫•t ref? (1: C√≥, 0: Kh√¥ng)
    'const': 0,               # S·ª≠ d·ª•ng ki·ªÉu truy xu·∫•t const? (1: C√≥, 0: Kh√¥ng)
    'index': 0,               # S·ª≠ d·ª•ng ki·ªÉu truy xu·∫•t index? (1: C√≥, 0: Kh√¥ng)
    'range': 0                # S·ª≠ d·ª•ng ki·ªÉu truy xu·∫•t range? (1: C√≥, 0: Kh√¥ng)
}

# 3. ƒê∆∞a v·ªÅ DataFrame ƒë√∫ng ƒë·ªãnh d·∫°ng
new_data = pd.DataFrame([new_query], columns=model_features)

# 4. D·ª± ƒëo√°n
result = model.predict(new_data)[0]
print("üì¢ Truy v·∫•n n√†y:", "CH·∫¨M ‚ùå" if result else "NHANH ‚úÖ")
